{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kbito\\\\Documents\\\\School\\\\ACT\\\\ACT\\\\Frontend\\\\src\\\\scenes\\\\dashboard\\\\Portfolio.js\",\n  _s = $RefreshSig$();\n// import { Box, Typography, useTheme, Button } from \"@mui/material\";\n// import { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\n// import { tokens } from \"../../theme\";\n// import Icon from \"@mui/material/Icon\";\n// import { mockDataTeam } from \"../../data/mockData\";\n// import AdminPanelSettingsOutlinedIcon from \"@mui/icons-material/AdminPanelSettingsOutlined\";\n// import LockOpenOutlinedIcon from \"@mui/icons-material/LockOpenOutlined\";\n// import SecurityOutlinedIcon from \"@mui/icons-material/SecurityOutlined\";\n// import DeleteIcon from \"@mui/icons-material/Delete\";\n// import Header from \"../../components/Headers\";\n// // import { abc } from \"../../mockData\";\n// import { useEffect, useState, useCallback } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// // import { useAuthContext } from \"../../hooks/useAuthContext.jsx\";\n// import AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\n// import { CleaningServices } from \"@mui/icons-material\";\n// import React from \"react\";\n// // import NewsCard from \"../Cards/NewsCard\";\n// import Grid from \"@mui/material/Grid\";\n// import Paper from \"@mui/material/Paper\";\n// import List from '@mui/material/List';\n// import ListItem from '@mui/material/ListItem';\n// import ListItemText from '@mui/material/ListItemText';\n// import Divider from '@mui/material/Divider';\n\n// const Portfolio = () => {\n//   // const { user } = useAuthContext();\n//   const user = JSON.parse(localStorage.getItem(\"user\"));\n//   console.log(user);\n//   const history = useNavigate();\n//   // const [abc, setAbc] = useState([]);\n//   const [rows, setRows] = useState([]);\n//   const [invAmt, setInvAmt] = useState(0);\n//   const [currAmt, setCurrAmt] = useState(0);\n//   const [tProfit, setTProfit] = useState(0);\n\n//   // const [rows: GridRowsProp, setRows] = React.useState([]);\n//   const [isLoading, setIsLoading] = useState(true);\n\n//   const url = \"http://localhost:8080/portfolio/\".concat(user.id);\n//   // console.log(url);\n\n//   const fetchData = async () => {\n//     let abc = [];\n//     const temp = [];\n//     let totalAmount = 0;\n//     let totalProfit = 0;\n//     let totalCurrAmount = 0;\n\n//     await fetch(url)\n//       .then((response) => response.json())\n//       // .then((response) => setAbc(response));\n//       .then((response) => {\n//         response.map((d) => abc.push(d));\n//       });\n//     console.log(abc);\n//     for (var key in abc) {\n//       if (!abc.hasOwnProperty(key)) continue;\n//       let newData = [];\n//       const url = \"https://finnhub.io/api/v1/quote?symbol=\".concat(\n//         abc[key].symbol,\n//         \"&token=c94i99aad3if4j50rvn0\"\n//       );\n//       await axios\n//         .get(url)\n//         .then((res) => {\n//           const pData = res.data;\n//           newData.push(pData);\n//         })\n//         .catch((err) => {\n//           console.log(err);\n//         });\n//       console.log(newData);\n\n//       const ab = {\n//         id: abc[key]._id,\n//         name: abc[key].name,\n//         symbol: abc[key].symbol,\n//         today: newData[0][\"c\"],\n//         buyPrice: abc[key].price,\n//         shares: abc[key].shares,\n//         currAmount: abc[key].shares*newData[0][\"c\"],\n//         invAmount: abc[key].shares*abc[key].price,\n//         profit: abc[key].shares*newData[0][\"c\"] - abc[key].shares*abc[key].price\n//         // id: abc[key]._id,\n//         // name: abc[key].name,\n//         // symbol: abc[key].symbol,\n//         // delete: abc[key]._id,\n//         // ids: abc[key]._id,\n//         // today: newData[0][\"c\"],\n//         // Percent: newData[0][\"dp\"] + \" %\",\n//         // open: newData[0][\"o\"],\n//         // high: newData[0][\"h\"],\n//         // low: newData[0][\"l\"],\n//         // close: newData[0][\"pc\"],\n//       };\n\n//       totalAmount+=ab.invAmount;\n//       totalProfit+=ab.profit;\n//       totalCurrAmount += ab.currAmount\n//       // console.log(pData[key].name)\n//       temp.push(ab);\n\n//     }\n//     setInvAmt(totalAmount)\n//     setTProfit(totalProfit);\n//     setCurrAmt(totalCurrAmount)\n//     console.log(temp);\n//     const s = new Set(temp);\n//     console.log(s);\n//     setRows(Array.from(s));\n//     // setIsLoading(false);\n//   };\n\n//   useEffect(() => {\n//     // abc = [];\n//     // temp = [];\n//     fetchData();\n//   }, []);\n\n//   const theme = useTheme();\n//   const colors = tokens(theme.palette.mode);\n//   const columns = [\n//     {\n//       field: \"name\",\n//       headerName: \" Company Name\",\n//       flex: 1,\n//       cellClassName: \"name-column--cell\",\n//     },\n//     {\n//       field: \"symbol\",\n//       headerName: \"Symbol\",\n//       flex: 0.5,\n//       cellClassName: \"symbol-column--cell\",\n//     },\n//     {\n//       field: \"today\",\n//       headerName: \"Current Price\",\n//       flex: 0.5,\n//       type: \"number\",\n//       headerAlign: \"left\",\n//       align: \"left\",\n//     },\n//     {\n//       field: \"buyPrice\",\n//       headerName: \"Average Price\",\n//       flex: 0.5,\n//       type: \"number\",\n//       headerAlign: \"left\",\n//       align: \"left\",\n//     },\n//     {\n//       field: \"shares\",\n//       headerName: \"Quantity\",\n//       flex: 0.5,\n//       type: \"number\",\n//       headerAlign: \"left\",\n//       align: \"left\",\n//     },\n//     {\n//       field: \"currAmount\",\n//       headerName: \"Current Amount\",\n//       flex: 0.5,\n//       type: \"number\",\n//       headerAlign: \"left\",\n//       align: \"left\",\n//     },\n//     {\n//       field: \"invAmount\",\n//       headerName: \"Invested Amount\",\n//       flex: 0.5,\n//       type: \"number\",\n//       headerAlign: \"left\",\n//       align: \"left\",\n//     },\n//     {\n//       field: \"profit\",\n//       headerName: \"Profit/Loss\",\n//       flex: 0.5,\n//       type: \"number\",\n//       headerAlign: \"left\",\n//       align: \"left\",\n//     },\n//     {\n//       field: \"Sell\",\n//       headerName: \"Sell\",\n//       sortable: false,\n//       renderCell: (params) => {\n//         const Remove = (e) => {\n//           e.stopPropagation(); // don't select this row after clicking\n\n//           const api: GridApi = params.api;\n//           const thisRow: Record<string, GridCellValue> = {};\n\n//           api\n//             .getAllColumns()\n//             .filter((c) => c.field !== \"__check__\" && !!c)\n//             .forEach(\n//               (c) => (thisRow[c.field] = params.getValue(params.id, c.field))\n//             );\n\n//           // return alert(JSON.stringify(thisRow.name, null, 4));\n//           // return;\n//           console.log(thisRow)\n//               history('/sellStock',{state:thisRow});\n//         };\n\n//         return (\n//           <Button onClick={Remove} variant=\"outlined\" color=\"error\">\n//             Sell\n//           </Button>\n//         );\n//       },\n//     },\n//   ];\n\n//   return (\n//     <>\n//       {/* {isLoading && <h1>Loading Data...</h1>} */}\n//       <Box m=\"20px\">\n//         <Header title=\"Portfolio\" />\n//         <Paper elevation={3}>\n\n//         <Box\n//         sx={{\n//           display: 'flex',\n//           justifyContent: 'center',\n//           p: 5,\n//           m: 1,\n//           bgcolor: 'background.paper',\n//           borderRadius: 1,\n//           }}\n//         >\n//         <div style = {{margin: \"5px 15px 5px 15px\", \"font-weight\":\"bolder\", \"padding-right\":\"50px\", \"fontSize\":\"x-large\"}}>{\"Invested Amount: \"}  <div style={{\"color\":\"blue\",\"textAlign\":\"center\"}}>$ {invAmt.toFixed(2)}</div></div>\n//         <div style = {{margin: \"5px 15px 5px 15px\", \"font-weight\":\"bolder\", \"padding-right\":\"50px\",\"fontSize\":\"x-large\"}}>{\"Current Amount: \"} <div style={{\"color\":\"blue\",\"textAlign\":\"center\"}}>$ {currAmt.toFixed(2)}</div> </div>\n//         <div style = {{margin: \"5px 15px 5px 15px\", \"font-weight\":\"bolder\", \"padding-right\":\"50px\",\"fontSize\":\"x-large\"}}>{\"Profit/Loss: \"} <div style={{\"color\":\"#03C03C\",\"textAlign\":\"center\"}}>$ {tProfit.toFixed(2)}</div></div>\n//       </Box>\n\n//           {/* <div sx={{ display: 'inline' }}>{\"Invested Amount: \" + invAmt.toFixed(2)}</div>\n//           <div sx={{ display: 'inline' }}>{\"Current Amount: \" + currAmt.toFixed(2)}</div>\n//           <div sx={{ display: 'inline' }}>{\"Profit/Loss: \" + tProfit.toFixed(2)}</div> */}\n//           {/* <List component=\"nav\" aria-label=\"mailbox folders\">\n//             <ListItem>\n//               <ListItemText primary={\"Invested Amount: \" + invAmt.toFixed(2)}/>\n//             </ListItem>\n//             <Divider />\n//             <ListItem divider>\n//               <ListItemText primary={\"Current Amount: \" + currAmt.toFixed(2)} />\n//             </ListItem>\n//             <Divider />\n//             <ListItem divider>\n//               <ListItemText primary={\"Profit/Loss: \" + tProfit.toFixed(2)} />\n//             </ListItem>\n//           </List> */}\n//         </Paper>\n//         {/* {invAmt}\n//         {tProfit} */}\n//         <Box\n//           m=\"40px 0 0 0\"\n//           height=\"75vh\"\n//           sx={{\n//             \"& .MuiDataGrid-root\": {\n//               border: \"none\",\n//             },\n//             \"& .MuiDataGrid-cell\": {\n//               borderBottom: \"none\",\n//             },\n//             \"& .name-column--cell\": {\n//               color: colors.greenAccent[300],\n//             },\n//             \"& .MuiDataGrid-columnHeaders\": {\n//               backgroundColor: colors.blueAccent[700],\n//               borderBottom: \"none\",\n//             },\n//             \"& .MuiDataGrid-virtualScroller\": {\n//               backgroundColor: colors.primary[400],\n//             },\n//             \"& .MuiDataGrid-footerContainer\": {\n//               borderTop: \"none\",\n//               backgroundColor: colors.blueAccent[700],\n//             },\n//             \"& .MuiCheckbox-root\": {\n//               color: `${colors.greenAccent[200]} !important`,\n//             },\n//           }}\n//         >\n//           {rows && (\n//             <DataGrid\n//               rows={rows}\n//               columns={columns}\n//               components={{ Toolbar: GridToolbar }}\n//             />\n//           )}\n//         </Box>\n//       </Box>\n//     </>\n//   );\n// };\n\n// export default Portfolio;\n\n//firebase setup\n\n// src/scenes/dashboard/Portfolio.js\nimport { Box, Typography, useTheme, Button } from \"@mui/material\";\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\nimport { tokens } from \"../../theme\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Header from \"../../components/Headers\";\nimport Paper from \"@mui/material/Paper\";\nimport { db } from \"../../firebaseConfig\"; // Import Firebase client config here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Portfolio = () => {\n  _s();\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const history = useNavigate();\n  const [rows, setRows] = useState([]);\n  const [invAmt, setInvAmt] = useState(0);\n  const [currAmt, setCurrAmt] = useState(0);\n  const [tProfit, setTProfit] = useState(0);\n  const fetchData = async () => {\n    let abc = [];\n    const temp = [];\n    let totalAmount = 0;\n    let totalProfit = 0;\n    let totalCurrAmount = 0;\n\n    // Retrieve data from Firestore\n    const portfolioSnapshot = await db.collection(\"portfolio\").where(\"userId\", \"==\", user.id).get();\n    portfolioSnapshot.forEach(doc => {\n      const data = doc.data();\n      abc.push({\n        id: doc.id,\n        ...data\n      });\n    });\n    for (let key in abc) {\n      let newData = [];\n      const apiURL = `https://finnhub.io/api/v1/quote?symbol=${abc[key].symbol}&token=c94i99aad3if4j50rvn0`;\n      await axios.get(apiURL).then(res => {\n        newData.push(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n      const ab = {\n        id: abc[key].id,\n        name: abc[key].name,\n        symbol: abc[key].symbol,\n        today: newData[0][\"c\"],\n        buyPrice: abc[key].price,\n        shares: abc[key].shares,\n        currAmount: abc[key].shares * newData[0][\"c\"],\n        invAmount: abc[key].shares * abc[key].price,\n        profit: abc[key].shares * newData[0][\"c\"] - abc[key].shares * abc[key].price\n      };\n      totalAmount += ab.invAmount;\n      totalProfit += ab.profit;\n      totalCurrAmount += ab.currAmount;\n      temp.push(ab);\n    }\n    setInvAmt(totalAmount);\n    setTProfit(totalProfit);\n    setCurrAmt(totalCurrAmount);\n    setRows(temp);\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  const columns = [{\n    field: \"name\",\n    headerName: \"Company Name\",\n    flex: 1,\n    cellClassName: \"name-column--cell\"\n  }, {\n    field: \"symbol\",\n    headerName: \"Symbol\",\n    flex: 0.5,\n    cellClassName: \"symbol-column--cell\"\n  }, {\n    field: \"today\",\n    headerName: \"Current Price\",\n    flex: 0.5,\n    type: \"number\",\n    headerAlign: \"left\",\n    align: \"left\"\n  }, {\n    field: \"buyPrice\",\n    headerName: \"Average Price\",\n    flex: 0.5,\n    type: \"number\",\n    headerAlign: \"left\",\n    align: \"left\"\n  }, {\n    field: \"shares\",\n    headerName: \"Quantity\",\n    flex: 0.5,\n    type: \"number\",\n    headerAlign: \"left\",\n    align: \"left\"\n  }, {\n    field: \"currAmount\",\n    headerName: \"Current Amount\",\n    flex: 0.5,\n    type: \"number\",\n    headerAlign: \"left\",\n    align: \"left\"\n  }, {\n    field: \"invAmount\",\n    headerName: \"Invested Amount\",\n    flex: 0.5,\n    type: \"number\",\n    headerAlign: \"left\",\n    align: \"left\"\n  }, {\n    field: \"profit\",\n    headerName: \"Profit/Loss\",\n    flex: 0.5,\n    type: \"number\",\n    headerAlign: \"left\",\n    align: \"left\"\n  }, {\n    field: \"Sell\",\n    headerName: \"Sell\",\n    sortable: false,\n    renderCell: params => /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => history(\"/sellStock\", {\n        state: params.row\n      }),\n      variant: \"outlined\",\n      color: \"error\",\n      children: \"Sell\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 9\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Portfolio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          p: 5,\n          m: 1,\n          bgcolor: 'background.paper',\n          borderRadius: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: \"5px 15px\",\n            fontWeight: \"bold\",\n            paddingRight: \"50px\",\n            fontSize: \"x-large\"\n          },\n          children: [\"Invested Amount: \", \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: \"blue\",\n              textAlign: \"center\"\n            },\n            children: [\"$ \", invAmt.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: \"5px 15px\",\n            fontWeight: \"bold\",\n            paddingRight: \"50px\",\n            fontSize: \"x-large\"\n          },\n          children: [\"Current Amount: \", \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: \"blue\",\n              textAlign: \"center\"\n            },\n            children: [\"$ \", currAmt.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: \"5px 15px\",\n            fontWeight: \"bold\",\n            paddingRight: \"50px\",\n            fontSize: \"x-large\"\n          },\n          children: [\"Profit/Loss: \", \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: \"#03C03C\",\n              textAlign: \"center\"\n            },\n            children: [\"$ \", tProfit.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      m: \"40px 0 0 0\",\n      height: \"75vh\",\n      sx: {\n        \"& .MuiDataGrid-root\": {\n          border: \"none\"\n        }\n      },\n      children: rows && /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: columns,\n        components: {\n          Toolbar: GridToolbar\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 412,\n    columnNumber: 5\n  }, this);\n};\n_s(Portfolio, \"SyJl0jU0v849+8UKiJfBOD5paEc=\", false, function () {\n  return [useNavigate, useTheme];\n});\n_c = Portfolio;\nexport default Portfolio;\nvar _c;\n$RefreshReg$(_c, \"Portfolio\");","map":{"version":3,"names":["Box","Typography","useTheme","Button","DataGrid","GridToolbar","tokens","useEffect","useState","useNavigate","axios","Header","Paper","db","jsxDEV","_jsxDEV","Portfolio","_s","user","JSON","parse","localStorage","getItem","history","rows","setRows","invAmt","setInvAmt","currAmt","setCurrAmt","tProfit","setTProfit","fetchData","abc","temp","totalAmount","totalProfit","totalCurrAmount","portfolioSnapshot","collection","where","id","get","forEach","doc","data","push","key","newData","apiURL","symbol","then","res","catch","err","console","log","ab","name","today","buyPrice","price","shares","currAmount","invAmount","profit","theme","colors","palette","mode","columns","field","headerName","flex","cellClassName","type","headerAlign","align","sortable","renderCell","params","onClick","state","row","variant","color","children","fileName","_jsxFileName","lineNumber","columnNumber","m","title","elevation","sx","display","justifyContent","p","bgcolor","borderRadius","style","margin","fontWeight","paddingRight","fontSize","textAlign","toFixed","height","border","components","Toolbar","_c","$RefreshReg$"],"sources":["C:/Users/kbito/Documents/School/ACT/ACT/Frontend/src/scenes/dashboard/Portfolio.js"],"sourcesContent":["// import { Box, Typography, useTheme, Button } from \"@mui/material\";\r\n// import { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\r\n// import { tokens } from \"../../theme\";\r\n// import Icon from \"@mui/material/Icon\";\r\n// import { mockDataTeam } from \"../../data/mockData\";\r\n// import AdminPanelSettingsOutlinedIcon from \"@mui/icons-material/AdminPanelSettingsOutlined\";\r\n// import LockOpenOutlinedIcon from \"@mui/icons-material/LockOpenOutlined\";\r\n// import SecurityOutlinedIcon from \"@mui/icons-material/SecurityOutlined\";\r\n// import DeleteIcon from \"@mui/icons-material/Delete\";\r\n// import Header from \"../../components/Headers\";\r\n// // import { abc } from \"../../mockData\";\r\n// import { useEffect, useState, useCallback } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n// // import { useAuthContext } from \"../../hooks/useAuthContext.jsx\";\r\n// import AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\n// import { CleaningServices } from \"@mui/icons-material\";\r\n// import React from \"react\";\r\n// // import NewsCard from \"../Cards/NewsCard\";\r\n// import Grid from \"@mui/material/Grid\";\r\n// import Paper from \"@mui/material/Paper\";\r\n// import List from '@mui/material/List';\r\n// import ListItem from '@mui/material/ListItem';\r\n// import ListItemText from '@mui/material/ListItemText';\r\n// import Divider from '@mui/material/Divider';\r\n\r\n// const Portfolio = () => {\r\n//   // const { user } = useAuthContext();\r\n//   const user = JSON.parse(localStorage.getItem(\"user\"));\r\n//   console.log(user);\r\n//   const history = useNavigate();\r\n//   // const [abc, setAbc] = useState([]);\r\n//   const [rows, setRows] = useState([]);\r\n//   const [invAmt, setInvAmt] = useState(0);\r\n//   const [currAmt, setCurrAmt] = useState(0);\r\n//   const [tProfit, setTProfit] = useState(0);\r\n\r\n//   // const [rows: GridRowsProp, setRows] = React.useState([]);\r\n//   const [isLoading, setIsLoading] = useState(true);\r\n\r\n//   const url = \"http://localhost:8080/portfolio/\".concat(user.id);\r\n//   // console.log(url);\r\n\r\n//   const fetchData = async () => {\r\n//     let abc = [];\r\n//     const temp = [];\r\n//     let totalAmount = 0;\r\n//     let totalProfit = 0;\r\n//     let totalCurrAmount = 0;\r\n\r\n//     await fetch(url)\r\n//       .then((response) => response.json())\r\n//       // .then((response) => setAbc(response));\r\n//       .then((response) => {\r\n//         response.map((d) => abc.push(d));\r\n//       });\r\n//     console.log(abc);\r\n//     for (var key in abc) {\r\n//       if (!abc.hasOwnProperty(key)) continue;\r\n//       let newData = [];\r\n//       const url = \"https://finnhub.io/api/v1/quote?symbol=\".concat(\r\n//         abc[key].symbol,\r\n//         \"&token=c94i99aad3if4j50rvn0\"\r\n//       );\r\n//       await axios\r\n//         .get(url)\r\n//         .then((res) => {\r\n//           const pData = res.data;\r\n//           newData.push(pData);\r\n//         })\r\n//         .catch((err) => {\r\n//           console.log(err);\r\n//         });\r\n//       console.log(newData);\r\n\r\n//       const ab = {\r\n//         id: abc[key]._id,\r\n//         name: abc[key].name,\r\n//         symbol: abc[key].symbol,\r\n//         today: newData[0][\"c\"],\r\n//         buyPrice: abc[key].price,\r\n//         shares: abc[key].shares,\r\n//         currAmount: abc[key].shares*newData[0][\"c\"],\r\n//         invAmount: abc[key].shares*abc[key].price,\r\n//         profit: abc[key].shares*newData[0][\"c\"] - abc[key].shares*abc[key].price\r\n//         // id: abc[key]._id,\r\n//         // name: abc[key].name,\r\n//         // symbol: abc[key].symbol,\r\n//         // delete: abc[key]._id,\r\n//         // ids: abc[key]._id,\r\n//         // today: newData[0][\"c\"],\r\n//         // Percent: newData[0][\"dp\"] + \" %\",\r\n//         // open: newData[0][\"o\"],\r\n//         // high: newData[0][\"h\"],\r\n//         // low: newData[0][\"l\"],\r\n//         // close: newData[0][\"pc\"],\r\n//       };\r\n\r\n//       totalAmount+=ab.invAmount;\r\n//       totalProfit+=ab.profit;\r\n//       totalCurrAmount += ab.currAmount\r\n//       // console.log(pData[key].name)\r\n//       temp.push(ab);\r\n\r\n//     }\r\n//     setInvAmt(totalAmount)\r\n//     setTProfit(totalProfit);\r\n//     setCurrAmt(totalCurrAmount)\r\n//     console.log(temp);\r\n//     const s = new Set(temp);\r\n//     console.log(s);\r\n//     setRows(Array.from(s));\r\n//     // setIsLoading(false);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     // abc = [];\r\n//     // temp = [];\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   const theme = useTheme();\r\n//   const colors = tokens(theme.palette.mode);\r\n//   const columns = [\r\n//     {\r\n//       field: \"name\",\r\n//       headerName: \" Company Name\",\r\n//       flex: 1,\r\n//       cellClassName: \"name-column--cell\",\r\n//     },\r\n//     {\r\n//       field: \"symbol\",\r\n//       headerName: \"Symbol\",\r\n//       flex: 0.5,\r\n//       cellClassName: \"symbol-column--cell\",\r\n//     },\r\n//     {\r\n//       field: \"today\",\r\n//       headerName: \"Current Price\",\r\n//       flex: 0.5,\r\n//       type: \"number\",\r\n//       headerAlign: \"left\",\r\n//       align: \"left\",\r\n//     },\r\n//     {\r\n//       field: \"buyPrice\",\r\n//       headerName: \"Average Price\",\r\n//       flex: 0.5,\r\n//       type: \"number\",\r\n//       headerAlign: \"left\",\r\n//       align: \"left\",\r\n//     },\r\n//     {\r\n//       field: \"shares\",\r\n//       headerName: \"Quantity\",\r\n//       flex: 0.5,\r\n//       type: \"number\",\r\n//       headerAlign: \"left\",\r\n//       align: \"left\",\r\n//     },\r\n//     {\r\n//       field: \"currAmount\",\r\n//       headerName: \"Current Amount\",\r\n//       flex: 0.5,\r\n//       type: \"number\",\r\n//       headerAlign: \"left\",\r\n//       align: \"left\",\r\n//     },\r\n//     {\r\n//       field: \"invAmount\",\r\n//       headerName: \"Invested Amount\",\r\n//       flex: 0.5,\r\n//       type: \"number\",\r\n//       headerAlign: \"left\",\r\n//       align: \"left\",\r\n//     },\r\n//     {\r\n//       field: \"profit\",\r\n//       headerName: \"Profit/Loss\",\r\n//       flex: 0.5,\r\n//       type: \"number\",\r\n//       headerAlign: \"left\",\r\n//       align: \"left\",\r\n//     },\r\n//     {\r\n//       field: \"Sell\",\r\n//       headerName: \"Sell\",\r\n//       sortable: false,\r\n//       renderCell: (params) => {\r\n//         const Remove = (e) => {\r\n//           e.stopPropagation(); // don't select this row after clicking\r\n\r\n//           const api: GridApi = params.api;\r\n//           const thisRow: Record<string, GridCellValue> = {};\r\n\r\n//           api\r\n//             .getAllColumns()\r\n//             .filter((c) => c.field !== \"__check__\" && !!c)\r\n//             .forEach(\r\n//               (c) => (thisRow[c.field] = params.getValue(params.id, c.field))\r\n//             );\r\n\r\n//           // return alert(JSON.stringify(thisRow.name, null, 4));\r\n//           // return;\r\n//           console.log(thisRow)\r\n//               history('/sellStock',{state:thisRow});\r\n//         };\r\n\r\n//         return (\r\n//           <Button onClick={Remove} variant=\"outlined\" color=\"error\">\r\n//             Sell\r\n//           </Button>\r\n//         );\r\n//       },\r\n//     },\r\n//   ];\r\n\r\n//   return (\r\n//     <>\r\n//       {/* {isLoading && <h1>Loading Data...</h1>} */}\r\n//       <Box m=\"20px\">\r\n//         <Header title=\"Portfolio\" />\r\n//         <Paper elevation={3}>\r\n\r\n//         <Box\r\n//         sx={{\r\n//           display: 'flex',\r\n//           justifyContent: 'center',\r\n//           p: 5,\r\n//           m: 1,\r\n//           bgcolor: 'background.paper',\r\n//           borderRadius: 1,\r\n//           }}\r\n//         >\r\n//         <div style = {{margin: \"5px 15px 5px 15px\", \"font-weight\":\"bolder\", \"padding-right\":\"50px\", \"fontSize\":\"x-large\"}}>{\"Invested Amount: \"}  <div style={{\"color\":\"blue\",\"textAlign\":\"center\"}}>$ {invAmt.toFixed(2)}</div></div>\r\n//         <div style = {{margin: \"5px 15px 5px 15px\", \"font-weight\":\"bolder\", \"padding-right\":\"50px\",\"fontSize\":\"x-large\"}}>{\"Current Amount: \"} <div style={{\"color\":\"blue\",\"textAlign\":\"center\"}}>$ {currAmt.toFixed(2)}</div> </div>\r\n//         <div style = {{margin: \"5px 15px 5px 15px\", \"font-weight\":\"bolder\", \"padding-right\":\"50px\",\"fontSize\":\"x-large\"}}>{\"Profit/Loss: \"} <div style={{\"color\":\"#03C03C\",\"textAlign\":\"center\"}}>$ {tProfit.toFixed(2)}</div></div>\r\n//       </Box>\r\n\r\n//           {/* <div sx={{ display: 'inline' }}>{\"Invested Amount: \" + invAmt.toFixed(2)}</div>\r\n//           <div sx={{ display: 'inline' }}>{\"Current Amount: \" + currAmt.toFixed(2)}</div>\r\n//           <div sx={{ display: 'inline' }}>{\"Profit/Loss: \" + tProfit.toFixed(2)}</div> */}\r\n//           {/* <List component=\"nav\" aria-label=\"mailbox folders\">\r\n//             <ListItem>\r\n//               <ListItemText primary={\"Invested Amount: \" + invAmt.toFixed(2)}/>\r\n//             </ListItem>\r\n//             <Divider />\r\n//             <ListItem divider>\r\n//               <ListItemText primary={\"Current Amount: \" + currAmt.toFixed(2)} />\r\n//             </ListItem>\r\n//             <Divider />\r\n//             <ListItem divider>\r\n//               <ListItemText primary={\"Profit/Loss: \" + tProfit.toFixed(2)} />\r\n//             </ListItem>\r\n//           </List> */}\r\n//         </Paper>\r\n//         {/* {invAmt}\r\n//         {tProfit} */}\r\n//         <Box\r\n//           m=\"40px 0 0 0\"\r\n//           height=\"75vh\"\r\n//           sx={{\r\n//             \"& .MuiDataGrid-root\": {\r\n//               border: \"none\",\r\n//             },\r\n//             \"& .MuiDataGrid-cell\": {\r\n//               borderBottom: \"none\",\r\n//             },\r\n//             \"& .name-column--cell\": {\r\n//               color: colors.greenAccent[300],\r\n//             },\r\n//             \"& .MuiDataGrid-columnHeaders\": {\r\n//               backgroundColor: colors.blueAccent[700],\r\n//               borderBottom: \"none\",\r\n//             },\r\n//             \"& .MuiDataGrid-virtualScroller\": {\r\n//               backgroundColor: colors.primary[400],\r\n//             },\r\n//             \"& .MuiDataGrid-footerContainer\": {\r\n//               borderTop: \"none\",\r\n//               backgroundColor: colors.blueAccent[700],\r\n//             },\r\n//             \"& .MuiCheckbox-root\": {\r\n//               color: `${colors.greenAccent[200]} !important`,\r\n//             },\r\n//           }}\r\n//         >\r\n//           {rows && (\r\n//             <DataGrid\r\n//               rows={rows}\r\n//               columns={columns}\r\n//               components={{ Toolbar: GridToolbar }}\r\n//             />\r\n//           )}\r\n//         </Box>\r\n//       </Box>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Portfolio;\r\n\r\n\r\n\r\n\r\n\r\n\r\n//firebase setup\r\n\r\n// src/scenes/dashboard/Portfolio.js\r\nimport { Box, Typography, useTheme, Button } from \"@mui/material\";\r\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\r\nimport { tokens } from \"../../theme\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Header from \"../../components/Headers\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { db } from \"../../firebaseConfig\"; // Import Firebase client config here\r\n\r\nconst Portfolio = () => {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const history = useNavigate();\r\n  const [rows, setRows] = useState([]);\r\n  const [invAmt, setInvAmt] = useState(0);\r\n  const [currAmt, setCurrAmt] = useState(0);\r\n  const [tProfit, setTProfit] = useState(0);\r\n\r\n  const fetchData = async () => {\r\n    let abc = [];\r\n    const temp = [];\r\n    let totalAmount = 0;\r\n    let totalProfit = 0;\r\n    let totalCurrAmount = 0;\r\n\r\n    // Retrieve data from Firestore\r\n    const portfolioSnapshot = await db.collection(\"portfolio\").where(\"userId\", \"==\", user.id).get();\r\n    portfolioSnapshot.forEach((doc) => {\r\n      const data = doc.data();\r\n      abc.push({ id: doc.id, ...data });\r\n    });\r\n\r\n    for (let key in abc) {\r\n      let newData = [];\r\n      const apiURL = `https://finnhub.io/api/v1/quote?symbol=${abc[key].symbol}&token=c94i99aad3if4j50rvn0`;\r\n\r\n      await axios\r\n        .get(apiURL)\r\n        .then((res) => {\r\n          newData.push(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n\r\n      const ab = {\r\n        id: abc[key].id,\r\n        name: abc[key].name,\r\n        symbol: abc[key].symbol,\r\n        today: newData[0][\"c\"],\r\n        buyPrice: abc[key].price,\r\n        shares: abc[key].shares,\r\n        currAmount: abc[key].shares * newData[0][\"c\"],\r\n        invAmount: abc[key].shares * abc[key].price,\r\n        profit: abc[key].shares * newData[0][\"c\"] - abc[key].shares * abc[key].price,\r\n      };\r\n\r\n      totalAmount += ab.invAmount;\r\n      totalProfit += ab.profit;\r\n      totalCurrAmount += ab.currAmount;\r\n      temp.push(ab);\r\n    }\r\n\r\n    setInvAmt(totalAmount);\r\n    setTProfit(totalProfit);\r\n    setCurrAmt(totalCurrAmount);\r\n    setRows(temp);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  const columns = [\r\n    { field: \"name\", headerName: \"Company Name\", flex: 1, cellClassName: \"name-column--cell\" },\r\n    { field: \"symbol\", headerName: \"Symbol\", flex: 0.5, cellClassName: \"symbol-column--cell\" },\r\n    { field: \"today\", headerName: \"Current Price\", flex: 0.5, type: \"number\", headerAlign: \"left\", align: \"left\" },\r\n    { field: \"buyPrice\", headerName: \"Average Price\", flex: 0.5, type: \"number\", headerAlign: \"left\", align: \"left\" },\r\n    { field: \"shares\", headerName: \"Quantity\", flex: 0.5, type: \"number\", headerAlign: \"left\", align: \"left\" },\r\n    { field: \"currAmount\", headerName: \"Current Amount\", flex: 0.5, type: \"number\", headerAlign: \"left\", align: \"left\" },\r\n    { field: \"invAmount\", headerName: \"Invested Amount\", flex: 0.5, type: \"number\", headerAlign: \"left\", align: \"left\" },\r\n    { field: \"profit\", headerName: \"Profit/Loss\", flex: 0.5, type: \"number\", headerAlign: \"left\", align: \"left\" },\r\n    {\r\n      field: \"Sell\",\r\n      headerName: \"Sell\",\r\n      sortable: false,\r\n      renderCell: (params) => (\r\n        <Button\r\n          onClick={() => history(\"/sellStock\", { state: params.row })}\r\n          variant=\"outlined\"\r\n          color=\"error\"\r\n        >\r\n          Sell\r\n        </Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box m=\"20px\">\r\n      <Header title=\"Portfolio\" />\r\n      <Paper elevation={3}>\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', p: 5, m: 1, bgcolor: 'background.paper', borderRadius: 1 }}>\r\n          <div style={{ margin: \"5px 15px\", fontWeight: \"bold\", paddingRight: \"50px\", fontSize: \"x-large\" }}>\r\n            {\"Invested Amount: \"} <div style={{ color: \"blue\", textAlign: \"center\" }}>$ {invAmt.toFixed(2)}</div>\r\n          </div>\r\n          <div style={{ margin: \"5px 15px\", fontWeight: \"bold\", paddingRight: \"50px\", fontSize: \"x-large\" }}>\r\n            {\"Current Amount: \"} <div style={{ color: \"blue\", textAlign: \"center\" }}>$ {currAmt.toFixed(2)}</div>\r\n          </div>\r\n          <div style={{ margin: \"5px 15px\", fontWeight: \"bold\", paddingRight: \"50px\", fontSize: \"x-large\" }}>\r\n            {\"Profit/Loss: \"} <div style={{ color: \"#03C03C\", textAlign: \"center\" }}>$ {tProfit.toFixed(2)}</div>\r\n          </div>\r\n        </Box>\r\n      </Paper>\r\n      <Box m=\"40px 0 0 0\" height=\"75vh\" sx={{ \"& .MuiDataGrid-root\": { border: \"none\" } }}>\r\n        {rows && <DataGrid rows={rows} columns={columns} components={{ Toolbar: GridToolbar }} />}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Portfolio;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
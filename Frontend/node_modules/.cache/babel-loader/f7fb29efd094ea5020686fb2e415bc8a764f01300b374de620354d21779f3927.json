{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nexport const useTransaction = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const transaction = async (user, value) => {\n    setIsLoading(true);\n    setError(null);\n    const url = `http://localhost:8080/trade/${user.id}`;\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(value)\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.Error);\n      return false;\n    }\n    if (response.ok) {\n      // save the user to local browser storage\n      // Update the auth context\n      setIsLoading(false);\n      return true;\n    }\n  };\n  return {\n    transaction,\n    error,\n    isLoading\n  };\n};\n_s(useTransaction, \"oSmfmuW5T4Yczc8SMzWJFCrcXbA=\");","map":{"version":3,"names":["useState","useTransaction","_s","error","setError","isLoading","setIsLoading","transaction","user","value","url","id","response","fetch","method","headers","body","JSON","stringify","json","ok","Error"],"sources":["C:/Users/kbito/Documents/School/ACT/ACT/Frontend/src/hooks/transaction.jsx"],"sourcesContent":["import { useState } from 'react';\r\n\r\nexport const useTransaction = () =>{\r\n    const [error, setError] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(null);\r\n\r\n    const transaction = async (user,value) =>{\r\n        setIsLoading(true)\r\n        setError(null)\r\n        \r\n\r\n        const url = `http://localhost:8080/trade/${user.id}`;\r\n        const response = await fetch (url, {\r\n            method: 'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body: JSON.stringify(value)\r\n        })\r\n        const json = await response.json()\r\n\r\n        if(!response.ok){\r\n            setIsLoading(false)\r\n            setError(json.Error)\r\n            return false;\r\n        }\r\n        if(response.ok){\r\n            // save the user to local browser storage\r\n            // Update the auth context\r\n            setIsLoading(false);\r\n            return true;\r\n        }\r\n\r\n    }\r\n    return ({ transaction,  error, isLoading });\r\n};"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMO,WAAW,GAAG,MAAAA,CAAOC,IAAI,EAACC,KAAK,KAAI;IACrCH,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAGd,MAAMM,GAAG,GAAG,+BAA+BF,IAAI,CAACG,EAAE,EAAE;IACpD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAEH,GAAG,EAAE;MAC/BI,MAAM,EAAE,MAAM;MACdC,OAAO,EAAC;QAAC,cAAc,EAAC;MAAkB,CAAC;MAC3CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,KAAK;IAC9B,CAAC,CAAC;IACF,MAAMU,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAElC,IAAG,CAACP,QAAQ,CAACQ,EAAE,EAAC;MACZd,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACe,IAAI,CAACE,KAAK,CAAC;MACpB,OAAO,KAAK;IAChB;IACA,IAAGT,QAAQ,CAACQ,EAAE,EAAC;MACX;MACA;MACAd,YAAY,CAAC,KAAK,CAAC;MACnB,OAAO,IAAI;IACf;EAEJ,CAAC;EACD,OAAQ;IAAEC,WAAW;IAAGJ,KAAK;IAAEE;EAAU,CAAC;AAC9C,CAAC;AAACH,EAAA,CA/BWD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
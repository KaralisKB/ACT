{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kbito\\\\Documents\\\\School\\\\ACT\\\\ACT\\\\Frontend\\\\src\\\\global\\\\Topbar.jsx\",\n  _s = $RefreshSig$();\n// import {Typography} from \"@mui/material\";\n// import { Box, IconButton, useTheme } from \"@mui/material\";\n// import { useContext, useState, useEffect } from \"react\";\n// import Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\n// import { ColorModeContext, tokens } from \"./../theme\";\n// import InputBase from \"@mui/material/InputBase\";\n// import LightModeOutlinedIcon from \"@mui/icons-material/LightModeOutlined\";\n// import DarkModeOutlinedIcon from \"@mui/icons-material/DarkModeOutlined\";\n// //these all are icons like for dark mode, light mode, notifs, settings, profile etc\n// import NotificationsOutlinedIcon from \"@mui/icons-material/NotificationsOutlined\";\n// import SettingsOutlinedIcon from \"@mui/icons-material/SettingsOutlined\";\n// import PersonOutlinedIcon from \"@mui/icons-material/PersonOutlined\";\n// // import AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\n// import AccountBalanceWalletOutlinedIcon from '@mui/icons-material/AccountBalanceWalletOutlined';\n// import SearchIcon from \"@mui/icons-material/Search\";\n// import { rows } from './../Symbol';\n// import TextField from '@mui/material/TextField';\n// import { useLogout } from './../hooks/useLogout';\n// import { useNavigate } from \"react-router-dom\";\n// import LogoutIcon from '@mui/icons-material/Logout';\n// // import { useBalance} from '../hooks/useBalance';\n// // import { useBalContext } from \"../hooks/useBalContext\";\n\n// const filterOptions = createFilterOptions({\n//     matchFrom: 'any',\n//     limit: 10,\n//   });\n\n// const Topbar = ()  => {\n//     const theme = useTheme();\n//     // const { balanceUser } = useBalContext();\n//     const colors = tokens(theme.palette.mode);\n//     const colorMode = useContext(ColorModeContext);\n//     const { logout } = useLogout();\n//     const user = JSON.parse(localStorage.getItem(\"user\"));\n//     // const {balance, errorBal, bal} = useBalance();\n//     const [userBal, setUserBal]  = useState(user.balance);\n//     let navigate = useNavigate();\n\n//     useEffect(()=>{\n//       const url = \"http://localhost:8080/user/\".concat(user.id);;\n//       fetch(url)\n//        .then((res)=>res.json())\n//        .then((data)=>{\n//         setUserBal(data.balance)\n//         console.log(data.balance)\n//        })\n//        .catch((err)=>{\n//         console.log(err.message);\n//        }\n\n//        )\n\n//     },[userBal])\n\n//     async function logoutHandler(event) {\n//       logout();\n//       navigate(\"../\");\n//     }\n\n//     return (\n//       <div display= \"fixed\">\n//         <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" p={2}>\n//             {/* //box is just like div but it is convineint (we can write css on box directly unlike div) */}\n//           {/* SEARCH BAR */}\n//           <Typography\n//           variant=\"h2\"\n//           color={colors.grey[100]}\n//           fontWeight=\"bold\"\n//           sx={{ m: \"5px 5px 5px 5px\" }}\n//             >\n//               Stock Portfolio Manager\n//             </Typography>\n//           <Box\n//           display=\"flex\"\n//           backgroundColor={colors.primary[400]}\n//           borderRadius=\"3px\"\n//           >\n//                 {/* <Autocomplete\n//       filterOptions={filterOptions}\n//       multiple\n//       id=\"checkboxes-tags-demo\"\n//       options={rows}\n//       disableCloseOnSelect\n//       getOptionLabel={(option) => option.description}\n//       style={{ width: 500,color:\"black\" }}\n//       renderInput={(params) => (\n//         <TextField style={{color:\"black\"}} {...params} label=\"Enter Name\" placeholder=\"Add Company\" />\n//       )}\n//     />\n//             <IconButton>\n//                 <SearchIcon></SearchIcon>\n//             </IconButton> */}\n//           </Box>\n\n//           <Box display = \"flex\">\n\n//             <IconButton sx={{border:1,borderRadius:3}}>\n//               <><AccountBalanceWalletOutlinedIcon sx={{mr:\"10px\"}}/>${userBal?userBal.toFixed(2):userBal}</>\n//             </IconButton>\n//             <IconButton onClick={colorMode.toggleColorMode}>\n//                 {theme.palette.mode === 'dark' ? (\n//                     <DarkModeOutlinedIcon />\n//                 ) : (<LightModeOutlinedIcon />\n//                 )\n//                 }\n//             </IconButton>\n//             {/* <IconButton>\n//                 <SettingsOutlinedIcon />\n//             </IconButton> */}\n//             <IconButton onClick={logoutHandler}>\n//                 <LogoutIcon />\n//             </IconButton>\n\n//           </Box>\n//         </Box>\n//         </div>\n//       )\n// }\n\n// export default Topbar;\n\n// FIREBASE SETUP\nimport { Typography, Box, IconButton, useTheme } from \"@mui/material\";\nimport { useContext, useState, useEffect } from \"react\";\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { ColorModeContext, tokens } from \"./../theme\";\nimport InputBase from \"@mui/material/InputBase\";\nimport LightModeOutlinedIcon from \"@mui/icons-material/LightModeOutlined\";\nimport DarkModeOutlinedIcon from \"@mui/icons-material/DarkModeOutlined\";\nimport NotificationsOutlinedIcon from \"@mui/icons-material/NotificationsOutlined\";\nimport SettingsOutlinedIcon from \"@mui/icons-material/SettingsOutlined\";\nimport PersonOutlinedIcon from \"@mui/icons-material/PersonOutlined\";\nimport AccountBalanceWalletOutlinedIcon from '@mui/icons-material/AccountBalanceWalletOutlined';\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { rows } from './../Symbol';\nimport TextField from '@mui/material/TextField';\nimport { useLogout } from './../hooks/useLogout';\nimport { useNavigate } from \"react-router-dom\";\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport { useAuthContext } from \"../contexts/AuthContext\"; // Import the AuthContext to access user data from Firebase\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst filterOptions = createFilterOptions({\n  matchFrom: 'any',\n  limit: 10\n});\nconst Topbar = () => {\n  _s();\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  const colorMode = useContext(ColorModeContext);\n  const {\n    logout\n  } = useLogout(); // Custom logout hook to handle Firebase logout\n  const {\n    user\n  } = useAuthContext(); // Get user from AuthContext\n  const [userBal, setUserBal] = useState(0); // State to track user balance\n  let navigate = useNavigate();\n\n  // Fetch balance information if available in Firestore (example placeholder)\n  useEffect(() => {\n    if (user) {\n      // Assume balance is part of user data from Firestore or Firebase Auth custom claims\n      setUserBal(user.balance || 0); // Default to 0 if no balance\n    }\n  }, [user]);\n  const logoutHandler = async event => {\n    await logout(); // Logout user via Firebase\n    navigate(\"../\"); // Redirect to home or login page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    display: \"fixed\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      p: 2,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        color: colors.grey[100],\n        fontWeight: \"bold\",\n        sx: {\n          m: \"5px 5px 5px 5px\"\n        },\n        children: \"Stock Portfolio Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        backgroundColor: colors.primary[400],\n        borderRadius: \"3px\",\n        children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n          filterOptions: filterOptions,\n          options: rows,\n          getOptionLabel: option => option.description,\n          style: {\n            width: 500,\n            color: \"black\"\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            ...params,\n            label: \"Enter Name\",\n            placeholder: \"Add Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          sx: {\n            border: 1,\n            borderRadius: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(AccountBalanceWalletOutlinedIcon, {\n            sx: {\n              mr: \"10px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this), \"$\", userBal ? userBal.toFixed(2) : \"0.00\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: colorMode.toggleColorMode,\n          children: theme.palette.mode === 'dark' ? /*#__PURE__*/_jsxDEV(DarkModeOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(LightModeOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(NotificationsOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(SettingsOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: logoutHandler,\n          children: /*#__PURE__*/_jsxDEV(LogoutIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 9\n  }, this);\n};\n_s(Topbar, \"3fpJvdQs+8W8rLj8Yh+p/vCFoxU=\", false, function () {\n  return [useTheme, useLogout, useAuthContext, useNavigate];\n});\n_c = Topbar;\nexport default Topbar;\nvar _c;\n$RefreshReg$(_c, \"Topbar\");","map":{"version":3,"names":["Typography","Box","IconButton","useTheme","useContext","useState","useEffect","Autocomplete","createFilterOptions","ColorModeContext","tokens","InputBase","LightModeOutlinedIcon","DarkModeOutlinedIcon","NotificationsOutlinedIcon","SettingsOutlinedIcon","PersonOutlinedIcon","AccountBalanceWalletOutlinedIcon","SearchIcon","rows","TextField","useLogout","useNavigate","LogoutIcon","useAuthContext","jsxDEV","_jsxDEV","filterOptions","matchFrom","limit","Topbar","_s","theme","colors","palette","mode","colorMode","logout","user","userBal","setUserBal","navigate","balance","logoutHandler","event","display","children","justifyContent","alignItems","p","variant","color","grey","fontWeight","sx","m","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","primary","borderRadius","options","getOptionLabel","option","description","style","width","renderInput","params","label","placeholder","border","mr","toFixed","onClick","toggleColorMode","_c","$RefreshReg$"],"sources":["C:/Users/kbito/Documents/School/ACT/ACT/Frontend/src/global/Topbar.jsx"],"sourcesContent":["// import {Typography} from \"@mui/material\";\r\n// import { Box, IconButton, useTheme } from \"@mui/material\";\r\n// import { useContext, useState, useEffect } from \"react\";\r\n// import Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\r\n// import { ColorModeContext, tokens } from \"./../theme\";\r\n// import InputBase from \"@mui/material/InputBase\";\r\n// import LightModeOutlinedIcon from \"@mui/icons-material/LightModeOutlined\";\r\n// import DarkModeOutlinedIcon from \"@mui/icons-material/DarkModeOutlined\";\r\n// //these all are icons like for dark mode, light mode, notifs, settings, profile etc\r\n// import NotificationsOutlinedIcon from \"@mui/icons-material/NotificationsOutlined\";\r\n// import SettingsOutlinedIcon from \"@mui/icons-material/SettingsOutlined\";\r\n// import PersonOutlinedIcon from \"@mui/icons-material/PersonOutlined\";\r\n// // import AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\r\n// import AccountBalanceWalletOutlinedIcon from '@mui/icons-material/AccountBalanceWalletOutlined';\r\n// import SearchIcon from \"@mui/icons-material/Search\";\r\n// import { rows } from './../Symbol';\r\n// import TextField from '@mui/material/TextField';\r\n// import { useLogout } from './../hooks/useLogout';\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import LogoutIcon from '@mui/icons-material/Logout';\r\n// // import { useBalance} from '../hooks/useBalance';\r\n// // import { useBalContext } from \"../hooks/useBalContext\";\r\n\r\n// const filterOptions = createFilterOptions({\r\n//     matchFrom: 'any',\r\n//     limit: 10,\r\n//   });\r\n\r\n// const Topbar = ()  => {\r\n//     const theme = useTheme();\r\n//     // const { balanceUser } = useBalContext();\r\n//     const colors = tokens(theme.palette.mode);\r\n//     const colorMode = useContext(ColorModeContext);\r\n//     const { logout } = useLogout();\r\n//     const user = JSON.parse(localStorage.getItem(\"user\"));\r\n//     // const {balance, errorBal, bal} = useBalance();\r\n//     const [userBal, setUserBal]  = useState(user.balance);\r\n//     let navigate = useNavigate();\r\n  \r\n\r\n//     useEffect(()=>{\r\n//       const url = \"http://localhost:8080/user/\".concat(user.id);;\r\n//       fetch(url)\r\n//        .then((res)=>res.json())\r\n//        .then((data)=>{\r\n//         setUserBal(data.balance)\r\n//         console.log(data.balance)\r\n//        })\r\n//        .catch((err)=>{\r\n//         console.log(err.message);\r\n//        }\r\n\r\n//        )\r\n        \r\n//     },[userBal])\r\n\r\n//     async function logoutHandler(event) {\r\n//       logout();\r\n//       navigate(\"../\");\r\n//     }\r\n\r\n\r\n//     return (\r\n//       <div display= \"fixed\">\r\n//         <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" p={2}>\r\n//             {/* //box is just like div but it is convineint (we can write css on box directly unlike div) */}\r\n//           {/* SEARCH BAR */}\r\n//           <Typography\r\n//           variant=\"h2\"\r\n//           color={colors.grey[100]}\r\n//           fontWeight=\"bold\"\r\n//           sx={{ m: \"5px 5px 5px 5px\" }}\r\n//             >\r\n//               Stock Portfolio Manager\r\n//             </Typography>\r\n//           <Box\r\n//           display=\"flex\"\r\n//           backgroundColor={colors.primary[400]}\r\n//           borderRadius=\"3px\"\r\n//           >\r\n//                 {/* <Autocomplete\r\n//       filterOptions={filterOptions}\r\n//       multiple\r\n//       id=\"checkboxes-tags-demo\"\r\n//       options={rows}\r\n//       disableCloseOnSelect\r\n//       getOptionLabel={(option) => option.description}\r\n//       style={{ width: 500,color:\"black\" }}\r\n//       renderInput={(params) => (\r\n//         <TextField style={{color:\"black\"}} {...params} label=\"Enter Name\" placeholder=\"Add Company\" />\r\n//       )}\r\n//     />\r\n//             <IconButton>\r\n//                 <SearchIcon></SearchIcon>\r\n//             </IconButton> */}\r\n//           </Box>\r\n\r\n//           <Box display = \"flex\">\r\n            \r\n//             <IconButton sx={{border:1,borderRadius:3}}>\r\n//               <><AccountBalanceWalletOutlinedIcon sx={{mr:\"10px\"}}/>${userBal?userBal.toFixed(2):userBal}</>\r\n//             </IconButton>\r\n//             <IconButton onClick={colorMode.toggleColorMode}>\r\n//                 {theme.palette.mode === 'dark' ? (\r\n//                     <DarkModeOutlinedIcon />\r\n//                 ) : (<LightModeOutlinedIcon />\r\n//                 )\r\n//                 }\r\n//             </IconButton>\r\n//             {/* <IconButton>\r\n//                 <SettingsOutlinedIcon />\r\n//             </IconButton> */}\r\n//             <IconButton onClick={logoutHandler}>\r\n//                 <LogoutIcon />\r\n//             </IconButton>\r\n\r\n//           </Box>\r\n//         </Box>\r\n//         </div>\r\n//       )\r\n// }\r\n\r\n// export default Topbar;\r\n\r\n\r\n\r\n// FIREBASE SETUP\r\nimport { Typography, Box, IconButton, useTheme } from \"@mui/material\";\r\nimport { useContext, useState, useEffect } from \"react\";\r\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\r\nimport { ColorModeContext, tokens } from \"./../theme\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport LightModeOutlinedIcon from \"@mui/icons-material/LightModeOutlined\";\r\nimport DarkModeOutlinedIcon from \"@mui/icons-material/DarkModeOutlined\";\r\nimport NotificationsOutlinedIcon from \"@mui/icons-material/NotificationsOutlined\";\r\nimport SettingsOutlinedIcon from \"@mui/icons-material/SettingsOutlined\";\r\nimport PersonOutlinedIcon from \"@mui/icons-material/PersonOutlined\";\r\nimport AccountBalanceWalletOutlinedIcon from '@mui/icons-material/AccountBalanceWalletOutlined';\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { rows } from './../Symbol';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useLogout } from './../hooks/useLogout';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport { useAuthContext } from \"../contexts/AuthContext\"; // Import the AuthContext to access user data from Firebase\r\n\r\nconst filterOptions = createFilterOptions({\r\n    matchFrom: 'any',\r\n    limit: 10,\r\n});\r\n\r\nconst Topbar = () => {\r\n    const theme = useTheme();\r\n    const colors = tokens(theme.palette.mode);\r\n    const colorMode = useContext(ColorModeContext);\r\n    const { logout } = useLogout(); // Custom logout hook to handle Firebase logout\r\n    const { user } = useAuthContext(); // Get user from AuthContext\r\n    const [userBal, setUserBal] = useState(0); // State to track user balance\r\n    let navigate = useNavigate();\r\n\r\n    // Fetch balance information if available in Firestore (example placeholder)\r\n    useEffect(() => {\r\n        if (user) {\r\n            // Assume balance is part of user data from Firestore or Firebase Auth custom claims\r\n            setUserBal(user.balance || 0); // Default to 0 if no balance\r\n        }\r\n    }, [user]);\r\n\r\n    const logoutHandler = async (event) => {\r\n        await logout(); // Logout user via Firebase\r\n        navigate(\"../\"); // Redirect to home or login page\r\n    };\r\n\r\n    return (\r\n        <div display=\"fixed\">\r\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" p={2}>\r\n                {/* App Title */}\r\n                <Typography\r\n                    variant=\"h2\"\r\n                    color={colors.grey[100]}\r\n                    fontWeight=\"bold\"\r\n                    sx={{ m: \"5px 5px 5px 5px\" }}\r\n                >\r\n                    Stock Portfolio Manager\r\n                </Typography>\r\n\r\n                {/* Search Bar (Optional) */}\r\n                <Box display=\"flex\" backgroundColor={colors.primary[400]} borderRadius=\"3px\">\r\n                    <Autocomplete\r\n                        filterOptions={filterOptions}\r\n                        options={rows}\r\n                        getOptionLabel={(option) => option.description}\r\n                        style={{ width: 500, color: \"black\" }}\r\n                        renderInput={(params) => (\r\n                            <TextField {...params} label=\"Enter Name\" placeholder=\"Add Company\" />\r\n                        )}\r\n                    />\r\n                    <IconButton>\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                </Box>\r\n\r\n                {/* User Actions */}\r\n                <Box display=\"flex\">\r\n                    {/* Wallet Icon with Balance */}\r\n                    <IconButton sx={{ border: 1, borderRadius: 3 }}>\r\n                        <AccountBalanceWalletOutlinedIcon sx={{ mr: \"10px\" }} />\r\n                        ${userBal ? userBal.toFixed(2) : \"0.00\"}\r\n                    </IconButton>\r\n\r\n                    {/* Dark Mode Toggle */}\r\n                    <IconButton onClick={colorMode.toggleColorMode}>\r\n                        {theme.palette.mode === 'dark' ? (\r\n                            <DarkModeOutlinedIcon />\r\n                        ) : (\r\n                            <LightModeOutlinedIcon />\r\n                        )}\r\n                    </IconButton>\r\n\r\n                    {/* Notifications Icon (Optional) */}\r\n                    <IconButton>\r\n                        <NotificationsOutlinedIcon />\r\n                    </IconButton>\r\n\r\n                    {/* Settings Icon (Optional) */}\r\n                    <IconButton>\r\n                        <SettingsOutlinedIcon />\r\n                    </IconButton>\r\n\r\n                    {/* Logout Button */}\r\n                    <IconButton onClick={logoutHandler}>\r\n                        <LogoutIcon />\r\n                    </IconButton>\r\n                </Box>\r\n            </Box>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Topbar;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}